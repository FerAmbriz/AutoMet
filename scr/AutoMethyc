#!/bin/bash

#Defect values
thr=4
norm="False"
filtro="False"
genome="hg19"
depth=20
quality=30

# Options
while [[ $# -gt 0 ]]; do
opt="$1"
shift;
current_arg="$1"
case "$opt" in
"-h"|"--help"      ) echo '''
AutoMethyc version 0.0.3-beta
Usage
	AutoMethyc [options]
Options
	-i --input		Folder with fastq
	-o --output		Output location
	-r --ref		Folder with references
Optional arguments
	-t --threads		Number of threads (default=4)
	-n --normal		Folder with fastq of normals (default=False)
	-g --genome		Reference genome (default=hg19)
		other genomes:
			{hg38, hg19, hg18, hg17, hg16, mm39, mm10, mm9, mm8, mm7}
	-f --filtro		File with regions of interest (default=False)
	-d --depth		Minimum depth to consider (default=20)
	-q --quality		Minimum quality (default=30)
''';  exit 1;;
"-i"|"--input"      ) input="$1"; shift;;
"-o"|"--output"      ) output="$1"; shift;;
"-r"|"--ref"      ) ref="$1"; shift;;
"-f"|"--filtro"      ) filtro="$1"; shift;;
"-t"|"--threads"      ) thr="$1"; shift;;
"-n"|"--normal"      ) norm="$1"; shift;;
"-g"|"--genome"       ) genome="$1"; shift;;
"-q"|"--quality"       ) quality="$1"; shift;;
"-d"|"--depth"       ) depth="$1"; shift;;
	esac
done

figlet AutoMethyc

echo '#----------------------Parameters---------------------------#'
echo '	input: ' $input
echo '	output: ' $output
echo '	ref: '	$ref
echo '	filtro: ' $filtro
echo '	threads: ' $thr
echo '	normal: ' $norm
echo '	genome: ' $genome
echo '	depth: ' $depth
echo '	quality: ' $quality
echo '#-----------------------------------------------------------#'

start=`date +%s`

# Organizando el Output
mkdir $output/CSV
mkdir $output/HTML
mkdir $output/Bismark
mkdir $output/HTML/Bismark_report


if [ "$norm" = "False" ]; then
	if [ "$filtro" = "False" ]; then
		echo 'usando la version sin normales y sin filtro'

		BuclePipeline $input $output $ref $thr $quality

		# Filtrado por profundidad
		DepthCord $output/results/06_bedGraph $output/CSV $depth

		# descomprime y renombra los archivos por ID
		rename $output/results/06_bedGraph
		# Construcci贸n del merge
		allmerge $output/results/06_bedGraph $output 'Sample'

		Oncoprint_wf $output/merge.csv $output

		multiqc $output/results/02_fastq_trimmed/*
		mv multiqc* $output/HTML

		mv $output/results $output/Bismark
				
		mv $output/Bismark/results/results_html/* $output/HTML/Bismark_report
		mv $output/*csv $output/CSV
		rm -rf $output/tmp

		WebScrapping $output/CSV/Oncoprint_wf.csv $genome $output/CSV True

		fastqc_extract $output/Bismark/results/02_fastq_trimmed $output/CSV

		HTML_report $output $output/HTML False False
	else
		echo 'usando la version sin normales y con filtro'

				BuclePipeline $input $output $ref $thr $quality
				# Filtrado por profundidad
				DepthCord $output/results/06_bedGraph $output/CSV $depth
				# descomprime y renombra los archivos por ID
				rename $output/results/06_bedGraph
				# Construcci贸n del merge
				allmerge $output/results/06_bedGraph $output 'Sample'

				# Aplicacion de filtros
				Filter $output/merge.csv $filtro $output

				Oncoprint $output/Filtered.csv $output

				multiqc $output/results/02_fastq_trimmed/*
				mv multiqc* $output/HTML

				mv $output/results $output/Bismark

				
				mv $output/Bismark/results/results_html/* $output/HTML/Bismark_report
				mv $output/*csv $output/CSV
				rm -rf $output/tmp

				CountUF $output/CSV/merge.csv $output/CSV/Filtered.csv $output/CSV
				WebScrapping $output/CSV/Oncoprint.csv $genome $output/CSV False

				fastqc_extract $output/Bismark/results/02_fastq_trimmed $output/CSV

				HTML_report $output $output/HTML False True
	fi
else
	if [ "$filtro" = "False" ]; then

		echo 'usando la version con normales y sin filtro'

				mkdir $output/norm
				mkdir $output/samples


				echo '---------------Normal Samples------------------'
				BuclePipeline $norm $output/norm $ref $thr $quality
				# Filtrado por profundidad
				DepthCord $output/norm/results/06_bedGraph $output/CSV $depth
				# descomprime y renombra los archivos por ID
				rename $output/norm/results/06_bedGraph
				# Construcci贸n del merge
				allmerge $output/norm/results/06_bedGraph $output/norm 'Normal'
				
				
				multiqc $output/norm/results/02_fastq_trimmed/*

				mv multiqc_report.html $output/HTML/multiqc_report_normals.html
				mv multiqc_data $output/HTML/multiqc_data_normals


				echo '------------------Samples---------------------'
				BuclePipeline $input $output/samples $ref $thr $quality
				# Filtrado por profundidad
				DepthCord $output/samples/results/06_bedGraph $output $depth
				rename $output/samples/results/06_bedGraph
				allmerge $output/samples/results/06_bedGraph $output/samples 'Sample'


				echo 'Joining in one file the samples and normals'
				
				awk '(NR == 1) || (FNR > 1)' $output/norm/merge.csv $output/samples/merge.csv > $output/merge.csv
				awk '(NR == 1) || (FNR > 1)' $output/CountUF_depth.csv $output/CSV/CountUF_depth.csv > $output/CSV/CountUF_depth_merge.csv


				rm -rf $output/CountUF_depth.csv $output/CSV/CountUF_depth.csv


				echo 'Done merge samples and normals'

				Oncoprint_wf $output/merge.csv $output

				multiqc $output/samples/results/02_fastq_trimmed/*
				mv multiqc_report.html $output/HTML/multiqc_report_samples.html
				mv multiqc_data $output/HTML/multiqc_data_samples
				
				# Organizacion Output
				mv $output/*csv $output/CSV
				mv $output/samples $output/Bismark
				mv $output/norm $output/Bismark

				rm -rf $output/Bismark/norm/tmp
				rm -rf $output/Bismark/samples/tmp

				mv $output/Bismark/norm/results/results_html/* $output/HTML/Bismark_report
				mv $output/Bismark/norm/samples/results_html/* $output/HTML/Bismark_report
				
				fastqc_extract $output/Bismark/norm/results/02_fastq_trimmed $output/Bismark/norm
				fastqc_extract $output/Bismark/samples/results/02_fastq_trimmed $output/Bismark/samples
				awk '(NR == 1) || (FNR > 1)' $output/Bismark/norm/fastqc_merge.csv $output/Bismark/samples/fastqc_merge.csv > $output/CSV/fastqc_merge.csv

				Norm_wf $output/CSV/Oncoprint_wf.csv $output/CSV
				PCA $output/CSV/OncoprintNorm.csv $output/CSV
				WebScrapping $output/CSV/Oncoprint_wf.csv $genome $output/CSV True
				HTML_report $output $output/HTML True False
	else
				echo 'usando la version con normales y con filtro'

				echo 'You are using normals'
				mkdir $output/norm
				mkdir $output/samples


				echo '---------------Normal Samples------------------'
				BuclePipeline $norm $output/norm $ref $thr $quality
				# Filtrado por profundidad
				DepthCord $output/norm/results/06_bedGraph $output/CSV $depth
				# descomprime y renombra los archivos por ID
				rename $output/norm/results/06_bedGraph
				# Construcci贸n del merge
				allmerge $output/norm/results/06_bedGraph $output/norm 'Normal'

				# Aplicacion de filtros
				Filter $output/norm/merge.csv $filtro $output/norm


				multiqc $output/norm/results/02_fastq_trimmed/*

				mv multiqc_report.html $output/HTML/multiqc_report_normals.html
				mv multiqc_data $output/HTML/multiqc_data_normals



				echo '------------------Samples---------------------'
				BuclePipeline $input $output/samples $ref $thr $quality
				# Filtrado por profundidad
				DepthCord $output/samples/results/06_bedGraph $output $depth
				rename $output/samples/results/06_bedGraph
				allmerge $output/samples/results/06_bedGraph $output/samples 'Sample'

				Filter $output/samples/merge.csv $filtro $output/samples


				echo 'Joining in one file the samples and normals'
				
				awk '(NR == 1) || (FNR > 1)' $output/norm/Filtered.csv $output/samples/Filtered.csv > $output/Filtered.csv

				awk '(NR == 1) || (FNR > 1)' $output/norm/Count.csv $output/samples/Count.csv > $output/Count.csv

				awk '(NR == 1) || (FNR > 1)' $output/norm/NotLoc.csv $output/samples/NotLoc.csv > $output/NotLoc.csv

				awk '(NR == 1) || (FNR > 1)' $output/norm/merge.csv $output/samples/merge.csv > $output/merge.csv

				awk '(NR == 1) || (FNR > 1)' $output/CountUF_depth.csv $output/CSV/CountUF_depth.csv > $output/CSV/CountUF_depth_merge.csv


				rm -rf $output/CountUF_depth.csv $output/CSV/CountUF_depth.csv


				echo 'Done merge samples and normals'


				Oncoprint $output/Filtered.csv $output

				multiqc $output/samples/results/02_fastq_trimmed/*
				mv multiqc_report.html $output/HTML/multiqc_report_samples.html
				mv multiqc_data $output/HTML/multiqc_data_samples
				
				# Organizacion Output
				mv $output/*csv $output/CSV
				mv $output/samples $output/Bismark
				mv $output/norm $output/Bismark

				rm -rf $output/Bismark/norm/tmp
				rm -rf $output/Bismark/samples/tmp

				mv $output/Bismark/norm/results/results_html/* $output/HTML/Bismark_report
				mv $output/Bismark/norm/samples/results_html/* $output/HTML/Bismark_report
				
				fastqc_extract $output/Bismark/norm/results/02_fastq_trimmed $output/Bismark/norm
				fastqc_extract $output/Bismark/samples/results/02_fastq_trimmed $output/Bismark/samples
				awk '(NR == 1) || (FNR > 1)' $output/Bismark/norm/fastqc_merge.csv $output/Bismark/samples/fastqc_merge.csv > $output/CSV/fastqc_merge.csv

				Norm $output/CSV/Oncoprint.csv $output/CSV/OncoprintPromedio.csv $output/CSV
				PCA $output/CSV/OncoprintNorm.csv $output/CSV
				CountUF $output/CSV/merge.csv $output/CSV/Filtered.csv $output/CSV
				WebScrapping $output/CSV/Oncoprint.csv $genome $output/CSV False
				HTML_report $output $output/HTML True True
	fi
fi

#Rscript /usr/bin/Oncoprint.R $output/OncoprintRellenado.csv $output/all_sites.png

#Rscript /usr/bin/OncoprintPromedio.R $output/OncoprintPromedio.csv $output/mean.png


echo 'Done Report HTML' 

end=`date +%s`
runtime=$((end-start))
echo 'run time = ' $runtime'(sec)'

echo 'DONE'
